var u=Object.defineProperty;var p=(s,e,r)=>e in s?u(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r;var a=(s,e,r)=>(p(s,typeof e!="symbol"?e+"":e,r),r);import{E as h,S as f,H as m,V as c,A as g,M as l,T as y,G as w,C as v,W as x,a as E}from"./vendor.1df669f0.js";const L=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const t of n)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function r(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerpolicy&&(t.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?t.credentials="include":n.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(n){if(n.ep)return;n.ep=!0;const t=r(n);fetch(n.href,t)}};L();class d{constructor(e){a(this,"xrExperience");a(this,"engine");a(this,"scene");this.canvas=e,console.log("App constructor"),this.engine=new h(e),this.scene=new f(this.engine);const r=new m("light",new c(0,1,0),this.scene);r.intensity=.7;var o=new g("Camera",0,0,10,new c(0,0,0),this.scene);o.attachControl(e,!0),l.CreateSphere("sphere",{diameter:1,segments:32},this.scene),this.add3DGUI()}add3DGUI(){var e=new y(""),r=new w(this.scene),o=new v;o.margin=.2,r.addControl(o),o.linkToTransformNode(e),o.position.z=-1.5;var n=function(){var i=new E("orientation");o.addControl(i),i.text="Button #"+o.children.length};o.blockLayout=!0;for(var t=0;t<60;t++)n();o.blockLayout=!1}async initXRExperience(){this.xrExperience=await this.scene.createDefaultXRExperienceAsync({disableTeleportation:!0,uiOptions:{sessionMode:"immersive-vr"},optionalFeatures:!0});const e=this.xrExperience.baseExperience.featuresManager;var r=l.CreateGround("Ground",{width:100,height:100});e.enableFeature(x.TELEPORTATION,"stable",{xrInput:this.xrExperience.input,floorMeshes:[r]})}async run(){this.engine.runRenderLoop(()=>{this.scene.render()})}}console.log(`main.ts starting ${d.name}`);window.addEventListener("DOMContentLoaded",async()=>{let s=document.getElementById("renderCanvas");new d(s).run()});
